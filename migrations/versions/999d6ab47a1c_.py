"""empty message

Revision ID: 999d6ab47a1c
Revises: 
Create Date: 2025-10-18 23:39:02.241103

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '999d6ab47a1c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products',
    sa.Column('ProductID', sa.Integer(), nullable=False),
    sa.Column('ProductName', sa.String(length=255), nullable=False),
    sa.Column('CategoryID', sa.Integer(), nullable=True),
    sa.Column('Category', sa.String(length=255), nullable=True),
    sa.Column('CategoryGroupID', sa.Integer(), nullable=True),
    sa.Column('CategoryGroup', sa.String(length=255), nullable=True),
    sa.Column('Active', sa.Boolean(), nullable=True),
    sa.Column('Price', sa.Float(), nullable=True),
    sa.Column('ProductCost', sa.Float(), nullable=True),
    sa.Column('Size', sa.String(length=100), nullable=True),
    sa.Column('SizeVolume', sa.Float(), nullable=True),
    sa.Column('SizeUnit', sa.String(length=50), nullable=True),
    sa.Column('Barcode', sa.String(length=100), nullable=True),
    sa.Column('Base', sa.String(length=50), nullable=True),
    sa.Column('BaseVolume', sa.Float(), nullable=True),
    sa.Column('BaseUnit', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('ProductID')
    )
    op.create_table('venues',
    sa.Column('VenueID', sa.Integer(), nullable=False),
    sa.Column('VenueName', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('VenueID')
    )
    op.create_table('stores',
    sa.Column('StoreID', sa.Integer(), nullable=False),
    sa.Column('StoreName', sa.String(length=255), nullable=False),
    sa.Column('VenueID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['VenueID'], ['venues.VenueID'], ),
    sa.PrimaryKeyConstraint('StoreID')
    )
    op.create_table('transactions',
    sa.Column('TransactionID', sa.Integer(), nullable=False),
    sa.Column('TransactionType', sa.String(length=50), nullable=False),
    sa.Column('DateTimeUTC', sa.DateTime(), nullable=False),
    sa.Column('OperatorNumber', sa.String(length=50), nullable=True),
    sa.Column('OperatorName', sa.String(length=255), nullable=True),
    sa.Column('TillID', sa.Integer(), nullable=True),
    sa.Column('TillName', sa.String(length=255), nullable=True),
    sa.Column('ServiceCharge', sa.Float(), nullable=True),
    sa.Column('NettTotal', sa.Float(), nullable=True),
    sa.Column('NettSales', sa.Float(), nullable=True),
    sa.Column('GrossSales', sa.Float(), nullable=True),
    sa.Column('OrderDiscount', sa.Float(), nullable=True),
    sa.Column('TotalDiscount', sa.Float(), nullable=True),
    sa.Column('Taxable', sa.Float(), nullable=True),
    sa.Column('NonTaxable', sa.Float(), nullable=True),
    sa.Column('TaxAmount', sa.Float(), nullable=True),
    sa.Column('Payments', sa.JSON(), nullable=True),
    sa.Column('Account', sa.JSON(), nullable=True),
    sa.Column('StoreID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['StoreID'], ['stores.StoreID'], ),
    sa.PrimaryKeyConstraint('TransactionID')
    )
    op.create_table('items',
    sa.Column('LineID', sa.Integer(), nullable=False),
    sa.Column('TransactionID', sa.Integer(), nullable=False),
    sa.Column('ProductID', sa.Integer(), nullable=False),
    sa.Column('Quantity', sa.Float(), nullable=True),
    sa.Column('NettPrice', sa.Float(), nullable=True),
    sa.Column('GrossPrice', sa.Float(), nullable=True),
    sa.Column('ItemDiscount', sa.Float(), nullable=True),
    sa.Column('IsCondiment', sa.Boolean(), nullable=True),
    sa.Column('NettTotal', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['ProductID'], ['products.ProductID'], ),
    sa.ForeignKeyConstraint(['TransactionID'], ['transactions.TransactionID'], ),
    sa.PrimaryKeyConstraint('LineID', 'TransactionID')
    )
    op.create_table('promos',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('LineID', sa.Integer(), nullable=False),
    sa.Column('TransactionID', sa.Integer(), nullable=False),
    sa.Column('PromoID', sa.Integer(), nullable=True),
    sa.Column('PromoName', sa.String(length=255), nullable=True),
    sa.Column('TotaliserName', sa.String(length=255), nullable=True),
    sa.Column('Amount', sa.Float(), nullable=True),
    sa.Column('TotaliserID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['LineID', 'TransactionID'], ['items.LineID', 'items.TransactionID'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('promos')
    op.drop_table('items')
    op.drop_table('transactions')
    op.drop_table('stores')
    op.drop_table('venues')
    op.drop_table('products')
    # ### end Alembic commands ###
